package secret;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

import org.apache.commons.codec.binary.Hex;
import org.bouncycastle.crypto.Digest;
import org.bouncycastle.crypto.digests.MD4Digest;

public class MDTest {
	public static String src = "i am gc MD";
	public static void main(String[] args) {
		System.out.println("=====jdk提供的MD5=====");
		jdkMD5();
		System.out.println("=====================");
		System.out.println("=====jdk提供的MD2=====");
		jdkMD2();
		System.out.println("=====================");
	}
	/*
	 * jdkMD5方法
	 */
	public static void jdkMD5(){
		try {
			//jdk提供的MessageDegest类 创建对象时候需要传入参数,可以是MD5, MD2
			MessageDigest md = MessageDigest.getInstance("MD5");
			byte[] result = md.digest(src.getBytes());
			//因为digest方法返回的使一个byte数组,如果想输出字符串,必须将byte数组转化成16进制等,但是jdk并没有提供这样的方法,所以你可以选择自己写或者使用bc或cc提供的方法
			//现在我们借助cc提供的方法
			//输出32位16进制数
			System.out.println("信息摘要之后的src: "+Hex.encodeHexString(result));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	/*
	 * jdkMD2信息摘要
	 */
	public static void jdkMD2(){
		try {
			//jdk提供的MessageDegest类 创建对象时候需要传入参数,可以是MD5, MD2
			MessageDigest md = MessageDigest.getInstance("MD2");
			byte[] result = md.digest(src.getBytes());
			//因为digest方法返回的使一个byte数组,如果想输出字符串,必须将byte数组转化成16进制等,但是jdk并没有提供这样的方法,所以你可以选择自己写或者使用bc或cc提供的方法
			//现在我们借助cc提供的方法
			//输出32位16进制数
			System.out.println("信息摘要之后的src: "+Hex.encodeHexString(result));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	//bc实现MD4
	public static void bcMD4(){
		//Digest是一个借口,MD4Degist仅仅是一个实现类
		Digest digest = new MD4Digest();
		digest.update(src.getBytes(), 0 , src.getBytes().length);
		byte[] result;
		digest.doFinal(result, arg1)
	}
}
