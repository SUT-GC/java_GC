package secret;

import java.security.MessageDigest;

import org.apache.commons.codec.binary.Hex;
import org.bouncycastle.crypto.Digest;
import org.bouncycastle.crypto.digests.SHA1Digest;

public class SHATest {
	public static String src = "i am gc SHA";
	
	public static void main(String[] args) {
		System.out.println("=====jdk提供的SHA1=====");
		jdkSHA1();
		System.out.println("=====================");
		System.out.println("=====bc提供的SHA1=====");
		bcSHA1();
		System.out.println("=====================");
	}

	/*
	 * jdk对SHA算法实现
	 */
	public static void jdkSHA1(){
		try {
			byte[] result;
			MessageDigest digest = MessageDigest.getInstance("SHA-256");
			result  = digest.digest(src.getBytes());
			System.out.println("消息摘要之后:"+Hex.encodeHexString(result));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	/*
	 * bc实现SHA1
	 */
	public static void bcSHA1(){
		//因为都是用Digest接口里的方法,在MD代码里已经注释了,这里就不再叙述
		Digest digest = new SHA1Digest();
		digest.update(src.getBytes(), 0, src.getBytes().length);
		byte[] result = new byte[digest.getDigestSize()];
		digest.doFinal(result, 0);
		System.out.println("消息摘要之后:"+Hex.encodeHexString(result));
	}
	/*
	 * 其余的SHA实现都与上面的方法相同
	 */
}
